{
  "cells":[
    {
      "raw":"\ndf = pd.read_csv(\"./datasets/saisandeepjallepalli__adidas-retail-eda-data-visualization__adidas.csv\")\n",
      "modified":"df = pd.read_csv(\n    './datasets/saisandeepjallepalli__adidas-retail-eda-data-visualization__adidas.csv'\n    )\n",
      "patts-hit":{
        
      },
      "rewritten-exec-time":12.869242
    },
    {
      "raw":"\ndf.dropna(inplace=True, axis=0)\n",
      "modified":"df.dropna(inplace=True, axis=0)\n",
      "patts-hit":{
        
      },
      "rewritten-exec-time":1.665112
    },
    {
      "raw":"\n# Dropping 'currency' column as all records have 'USD' as currency\n# Dropping 'source' column as all records have 'adidas United States' as value\n# Dropping 'brand', 'country', 'language' columns as all records have same value\n\ndf.drop([ 'brand', 'country', 'language', 'source_website', 'images', 'crawled_at', 'url', 'sku', 'currency','source', 'description'], axis=1, inplace=True)\n",
      "modified":"df.drop(['brand', 'country', 'language', 'source_website', 'images',\n    'crawled_at', 'url', 'sku', 'currency', 'source', 'description'], axis=\n    1, inplace=True)\n",
      "patts-hit":{
        
      },
      "rewritten-exec-time":0.701239
    },
    {
      "raw":"\n# Make copy for testing\ndf['copy'] = df['original_price'].copy()\n",
      "modified":"df['copy'] = df['original_price'].copy()\n",
      "patts-hit":{
        
      },
      "rewritten-exec-time":0.423826
    },
    {
      "raw":"\ndf['original_price'] = df['original_price'].str.split('$')\ndf['original_price'] = df['original_price'].str[1]\n",
      "modified":"if type(df['original_price']) != pd.Series:\n    _REWR_res = df['original_price'].str.split('$')\nelse:\n    _REWR_targ_0 = []\n    _REWR_ls = df['original_price'].tolist()\n    for _REWR_s in _REWR_ls:\n        _REWR_spl = _REWR_s.split('$')\n        _REWR_targ_0.append(_REWR_spl[1] if len(_REWR_spl) > 1 else None)\n    _REWR_res = _REWR_targ_0\ndf['original_price'] = _REWR_res\n",
      "patts-hit":{
        "FusableStrSplit":1
      },
      "rewritten-exec-time":0.70832
    },
    {
      "raw":"\nassert (df['original_price'] == df['defa']).all()\n",
      "modified":"assert (df['original_price'] == df['defa']).all()\n",
      "patts-hit":{
        
      },
      "rewritten-exec-time":0.355964
    }
  ]
}